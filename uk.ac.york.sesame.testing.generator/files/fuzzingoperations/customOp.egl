[% var commonTemplate : Template = TemplateFactory.load("fuzzingoperations/fuzzOpCommon.egl");

var extraImports = new List();
extraImports.add("fuzzingoperations.custom.*;");

commonTemplate.populate("fuzzOp", fuzzOp);
commonTemplate.populate("classNameMiddle", "Delay");
commonTemplate.populate("extraImports", extraImports);
commonTemplate.populate("useRandomSeed", false);
commonTemplate.populate("extraConstructorMethodCall", "setupFuzzOpInternal");

var fuzzOpClassName = fuzzOp.name;
%]
[%= commonTemplate.process() %]

	public void processElement1(EventMessage value, Context ctx, Collector<EventMessage> out) throws Exception {
		if (isReadyNow()) {
			Map<String,Object> params = getParameters();
			fuzzOpInternal.customProcess(params, value, ctx, out);
		} else {
			out.collect(value);
		}
	}
	
	private void setupFuzzOpInternal() {
		this.fuzzOpInternal = new [%= fuzzOpClassName %]();
	}
	
	public void preprocessing() {
		fuzzOpInternal.customPreprocessing(getParameters());
	}
}