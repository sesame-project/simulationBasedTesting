import java.util.Map;

import datatypes.DoubleRange;

import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;

import uk.ac.york.sesame.testing.architecture.data.EventMessage;

public class [%=attack.name%]FlatMap implements FlatMapFunction<EventMessage,EventMessage> {

	String topic;
	String start;
	String end;
	Map<String, DoubleRange> possibleValues;

	public String getTopic() {
		return topic;
	}

	public void setTopic(String topic) {
		this.topic = topic;
	}

	public String getStart() {
		return start;
	}

	public void setStart(String start) {
		this.start = start;
	}

	public String getEnd() {
		return end;
	}

	public void setEnd(String end) {
		this.end = end;
	}

	public [%=attack.name%]FlatMap(String topic, String start, String end, Map<String, DoubleRange> possibleValues) {
		this.topic = topic;
		this.start = start;
		this.end = end;
		[%
		for(aParameter in attack.valueSet) { %]
			this.possibleValues.put("[%=aParameter.propertyName%]", new DoubleRange([%=aParameter.lowerBound%], [%=aParameter.upperBound%]));
		[%
		}
		%]
	}
	
	@Override
	public void flatMap(EventMessage value, Collector<EventMessage> out) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
}
