package main;

import java.io.File;
import uk.ac.york.sesame.testing.evolutionary.EvolutionaryExpt;

public class ExptRunner_[%= campaign.name %] {
	public static void main(String [] args) {
				
		[% if (campaign.approach.isTypeOf(NSGAEvolutionaryAlgorithm)) { %]
		[% var nsgainfo = campaign.approach; %]
		int maxIterations = [%= nsgainfo.iterations %];
		int populationSize = [%= nsgainfo.populationSize %];
		int offspringSize = [%= nsgainfo.populationSize %];
		//ExperimentType etype = ExperimentType.FIXED_TIME_FUZZING;
		// Sets the space model file and the campaign to run here 
		
		// Setting paths
		// The paths are now supplied from the Wizard - nothing needs to be configured here!
		
		[* For Windows, replace the backslashes: need repeated backslashes for 
		proper escaping... EGL must construct a regex internally?
		https://stackoverflow.com/questions/14183248/replacing-single-with-in-java
		*]
		[% 
		
		
		var singleSlash = '\\\\';
		var dualSlash = '\\\\\\\\';
		
		var testingModelPath_escaped = testingModelPath.replace(singleSlash, dualSlash);
		var codeGenerationDir_escaped = codeGenerationDirectory.replace(singleSlash, dualSlash);
		var orchestratorBasePath_escaped = orchestratorBasePath.replace(singleSlash, dualSlash);
		 %] 

		// modelFile.toURI() - Fix for "a registered resource factory is needed" error on Windows
		File modelFile = new File("[%= testingModelPath_escaped %]");
		final String spaceModelFileName = modelFile.toURI().toASCIIString();
		
		final String CODE_GENERATION_DIRECTORY = "[%= codeGenerationDir_escaped %]";
		final String orchestratorBasePath = "[%= orchestratorBasePath_escaped %]";
		
		String campaignToRun = "[%= campaign.name %]";
			
		[% if (campaign.activationGeneration.isTypeOf(ConditionBasedActivationGenerationMethod)) { %]
		final boolean conditionBased = true;
		final int conditionDepth = [%= campaign.activationGeneration.conditionDepth %];
		[% } else if (campaign.activationGeneration.isTypeOf(TimeBasedActivationGenerationMethod)) { %]
		final boolean conditionBased = false;
		final int conditionDepth = 0;
		[% } else { %]
		[* If neither of these are set, default to time-based activation *]
		final boolean conditionBased = false;
		final int conditionDepth = 0;
		[% } %]
		
		// Since EGL can't detect the OS, use dynamic OS detection to setup the path at runtime
		final String grammarPath; 	 	
		final String osName = System.getProperty("os.name");
		if (osName.contains("Windows")) {		
			grammarPath = "[%= codeGenerationDir_escaped %]\\grammar\\sesame-standardgrammar-[%= campaign.name %].bnf";
		} else {
			grammarPath = "[%= codeGenerationDir_escaped %]/grammar/sesame-standardgrammar-[%= campaign.name %].bnf";
		}
			
		EvolutionaryExpt jmetalExpt = new EvolutionaryExpt(orchestratorBasePath, spaceModelFileName, campaignToRun, CODE_GENERATION_DIRECTORY, maxIterations, populationSize, offspringSize, conditionBased, conditionDepth, grammarPath);
		jmetalExpt.runExperiment();
		[% } %]
	}
}
