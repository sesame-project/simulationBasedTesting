rule test2Class transform test: Testing!Test {
	template : "ros/rosMain.egl"
	target : "src/" + test.name.firstToUpperCase() + "_TestRunner.java"
}

rule packetLoss2FlatMap transform attack: Testing!PacketLossNetworkAttack {
	guard : attack.containingTest != null
	template : "attacks/packetLoss.egl"
	target : "src/PacketLossFlatMap_" + attack.containingTest.name.firstToUpperCase() + ".java"	
}

rule blackHole2FlatMap transform attack: Testing!BlackholeNetworkAttack {
	guard : attack.containingTest != null
	template : "attacks/blackHole.egl"
	target : "src/BlackHoleFlatMap_" + attack.containingTest.name.firstToUpperCase() + ".java"	
}

rule fuzzRange2FlatMap transform attack: Testing!RandomValueFromSetAttack {
	guard : attack.containingTest != null
	template : "attacks/fuzzRange.egl"
	target : "src/"+ attack.name + "FlatMap_" + attack.containingTest.name.firstToUpperCase() + ".java"
}

rule rangeClass transform testCampaign: Testing!TestCampaign {
	guard : Testing!DoubleRange.all().notEmpty()
	template : "datatypes/doubleRange.egl"
	target : "src/datatypes/DoubleRange.java"
}

rule conditionClass transform condition: Testing!Conditions::Condition {
	guard : condition.elt.parentGrammar.name == "BasicComparisonVariables"
	template : "conditions/conditions.egl"
	target : "src/metrics/generated/" + condition.name + ".java"
}